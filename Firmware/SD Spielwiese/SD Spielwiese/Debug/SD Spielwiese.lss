
SD Spielwiese.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00804000  00804000  00000174  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000120  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000174  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001a4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000048  00000000  00000000  000001e8  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002abb  00000000  00000000  00000230  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00002224  00000000  00000000  00002ceb  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000032f  00000000  00000000  00004f0f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  00005240  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00001369  00000000  00000000  00005274  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000018  00000000  00000000  000065dd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__ctors_end>
   4:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
   8:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
   c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  10:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  14:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  18:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  1c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  20:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  24:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  28:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  2c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  30:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  34:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  38:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  3c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  40:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  44:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  48:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  4c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  50:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  54:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  58:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  5c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  60:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  64:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  68:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  6c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  70:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  74:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  78:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  7c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  80:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  84:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  88:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  8c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  90:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  94:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  98:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  9c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  a0:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>

000000a4 <__ctors_end>:
  a4:	11 24       	eor	r1, r1
  a6:	1f be       	out	0x3f, r1	; 63
  a8:	cf ef       	ldi	r28, 0xFF	; 255
  aa:	cd bf       	out	0x3d, r28	; 61
  ac:	df e7       	ldi	r29, 0x7F	; 127
  ae:	de bf       	out	0x3e, r29	; 62

000000b0 <__do_copy_data>:
  b0:	10 e4       	ldi	r17, 0x40	; 64
  b2:	a0 e0       	ldi	r26, 0x00	; 0
  b4:	b0 e4       	ldi	r27, 0x40	; 64
  b6:	e0 e2       	ldi	r30, 0x20	; 32
  b8:	f1 e0       	ldi	r31, 0x01	; 1
  ba:	00 e0       	ldi	r16, 0x00	; 0
  bc:	0b bf       	out	0x3b, r16	; 59
  be:	02 c0       	rjmp	.+4      	; 0xc4 <__do_copy_data+0x14>
  c0:	07 90       	elpm	r0, Z+
  c2:	0d 92       	st	X+, r0
  c4:	a0 30       	cpi	r26, 0x00	; 0
  c6:	b1 07       	cpc	r27, r17
  c8:	d9 f7       	brne	.-10     	; 0xc0 <__do_copy_data+0x10>

000000ca <__do_clear_bss>:
  ca:	20 e4       	ldi	r18, 0x40	; 64
  cc:	a0 e0       	ldi	r26, 0x00	; 0
  ce:	b0 e4       	ldi	r27, 0x40	; 64
  d0:	01 c0       	rjmp	.+2      	; 0xd4 <.do_clear_bss_start>

000000d2 <.do_clear_bss_loop>:
  d2:	1d 92       	st	X+, r1

000000d4 <.do_clear_bss_start>:
  d4:	a0 30       	cpi	r26, 0x00	; 0
  d6:	b2 07       	cpc	r27, r18
  d8:	e1 f7       	brne	.-8      	; 0xd2 <.do_clear_bss_loop>
  da:	0e 94 7f 00 	call	0xfe	; 0xfe <main>
  de:	0c 94 8e 00 	jmp	0x11c	; 0x11c <_exit>

000000e2 <__bad_interrupt>:
  e2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000e6 <setup_io>:
DIR Dir;			/* Directory object */
FILINFO Finfo;

void setup_io(void)
{
	PORTA_DIR = 0b01011001;	//SPI Interface Input/Output
  e6:	89 e5       	ldi	r24, 0x59	; 89
  e8:	80 93 00 04 	sts	0x0400, r24	; 0x800400 <__TEXT_REGION_LENGTH__+0x7e0400>
	PORTC_DIR = 0b00000000;
  ec:	10 92 40 04 	sts	0x0440, r1	; 0x800440 <__TEXT_REGION_LENGTH__+0x7e0440>
	PORTD_DIR = 0b01100000;	//LED Outputs
  f0:	80 e6       	ldi	r24, 0x60	; 96
  f2:	80 93 60 04 	sts	0x0460, r24	; 0x800460 <__TEXT_REGION_LENGTH__+0x7e0460>
	PORTC_PIN0CTRL = (1 << 3);	//Pullup für Button
  f6:	88 e0       	ldi	r24, 0x08	; 8
  f8:	80 93 50 04 	sts	0x0450, r24	; 0x800450 <__TEXT_REGION_LENGTH__+0x7e0450>
  fc:	08 95       	ret

000000fe <main>:
	UINT s1, s2, cnt, blen = sizeof Buff, acc_dirs, acc_files;
	DWORD ofs, sect = 0, dw, acc_size;
	static const char* const fst[] = {"", "FAT12", "FAT16", "FAT32", "exFAT"};
	FATFS *fs;
	
	ccp_write_io((void *) & (CLKCTRL.OSCHFCTRLA), (0b10001101)); //HF Clock Runstandby, 4 MHz CLK_Main, Autotune
  fe:	6d e8       	ldi	r22, 0x8D	; 141
 100:	70 e0       	ldi	r23, 0x00	; 0
 102:	88 e6       	ldi	r24, 0x68	; 104
 104:	90 e0       	ldi	r25, 0x00	; 0
 106:	0e 94 88 00 	call	0x110	; 0x110 <ccp_write_io>
	setup_io();
 10a:	0e 94 73 00 	call	0xe6	; 0xe6 <setup_io>
 10e:	ff cf       	rjmp	.-2      	; 0x10e <main+0x10>

00000110 <ccp_write_io>:
 110:	dc 01       	movw	r26, r24
 112:	28 ed       	ldi	r18, 0xD8	; 216
 114:	20 93 34 00 	sts	0x0034, r18	; 0x800034 <__TEXT_REGION_LENGTH__+0x7e0034>
 118:	6c 93       	st	X, r22
 11a:	08 95       	ret

0000011c <_exit>:
 11c:	f8 94       	cli

0000011e <__stop_program>:
 11e:	ff cf       	rjmp	.-2      	; 0x11e <__stop_program>
