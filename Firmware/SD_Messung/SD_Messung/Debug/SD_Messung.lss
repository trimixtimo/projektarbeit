
SD_Messung.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00804000  00804000  00000204  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001b0  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000204  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000234  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000078  00000000  00000000  00000278  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000029ac  00000000  00000000  000002f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00002426  00000000  00000000  00002c9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000051f  00000000  00000000  000050c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000094  00000000  00000000  000055e4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00001486  00000000  00000000  00005678  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000008e  00000000  00000000  00006afe  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  00006b8c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__ctors_end>
   4:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
   8:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
   c:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  10:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  14:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  18:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  1c:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  20:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  24:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  28:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  2c:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  30:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  34:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  38:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  3c:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  40:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  44:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  48:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  4c:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  50:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  54:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  58:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  5c:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  60:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  64:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  68:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  6c:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  70:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  74:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  78:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  7c:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  80:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  84:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  88:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  8c:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  90:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  94:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  98:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  9c:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  a0:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  a4:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>

000000a8 <__ctors_end>:
  a8:	11 24       	eor	r1, r1
  aa:	1f be       	out	0x3f, r1	; 63
  ac:	cf ef       	ldi	r28, 0xFF	; 255
  ae:	cd bf       	out	0x3d, r28	; 61
  b0:	df e7       	ldi	r29, 0x7F	; 127
  b2:	de bf       	out	0x3e, r29	; 62
  b4:	0e 94 ac 00 	call	0x158	; 0x158 <main>
  b8:	0c 94 d6 00 	jmp	0x1ac	; 0x1ac <_exit>

000000bc <__bad_interrupt>:
  bc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c0 <setup_io>:
	sei();	//Interrupts wieder zulassen
}
uint16_t adc_read(void)
{
	return ADC0_RES;
}
  c0:	89 e5       	ldi	r24, 0x59	; 89
  c2:	80 93 00 04 	sts	0x0400, r24	; 0x800400 <__TEXT_REGION_LENGTH__+0x7e0400>
  c6:	10 92 40 04 	sts	0x0440, r1	; 0x800440 <__TEXT_REGION_LENGTH__+0x7e0440>
  ca:	80 e6       	ldi	r24, 0x60	; 96
  cc:	80 93 60 04 	sts	0x0460, r24	; 0x800460 <__TEXT_REGION_LENGTH__+0x7e0460>
  d0:	88 e0       	ldi	r24, 0x08	; 8
  d2:	80 93 50 04 	sts	0x0450, r24	; 0x800450 <__TEXT_REGION_LENGTH__+0x7e0450>
  d6:	08 95       	ret

000000d8 <setup_vref>:
  d8:	86 e8       	ldi	r24, 0x86	; 134
  da:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
  de:	08 95       	ret

000000e0 <setup_adc>:
  e0:	e0 e0       	ldi	r30, 0x00	; 0
  e2:	f6 e0       	ldi	r31, 0x06	; 6
  e4:	82 e8       	ldi	r24, 0x82	; 130
  e6:	80 83       	st	Z, r24
  e8:	8d e0       	ldi	r24, 0x0D	; 13
  ea:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <__TEXT_REGION_LENGTH__+0x7e0602>
  ee:	81 e0       	ldi	r24, 0x01	; 1
  f0:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7e0608>
  f4:	90 e4       	ldi	r25, 0x40	; 64
  f6:	90 93 09 06 	sts	0x0609, r25	; 0x800609 <__TEXT_REGION_LENGTH__+0x7e0609>
  fa:	80 93 0e 06 	sts	0x060E, r24	; 0x80060e <__TEXT_REGION_LENGTH__+0x7e060e>
  fe:	90 81       	ld	r25, Z
 100:	91 60       	ori	r25, 0x01	; 1
 102:	90 83       	st	Z, r25
 104:	e7 ee       	ldi	r30, 0xE7	; 231
 106:	f3 e0       	ldi	r31, 0x03	; 3
 108:	31 97       	sbiw	r30, 0x01	; 1
 10a:	f1 f7       	brne	.-4      	; 0x108 <setup_adc+0x28>
 10c:	00 c0       	rjmp	.+0      	; 0x10e <setup_adc+0x2e>
 10e:	00 00       	nop
 110:	80 93 0a 06 	sts	0x060A, r24	; 0x80060a <__TEXT_REGION_LENGTH__+0x7e060a>
 114:	08 95       	ret

00000116 <setup_timer>:
 116:	88 ee       	ldi	r24, 0xE8	; 232
 118:	93 e0       	ldi	r25, 0x03	; 3
 11a:	80 93 26 0a 	sts	0x0A26, r24	; 0x800a26 <__TEXT_REGION_LENGTH__+0x7e0a26>
 11e:	90 93 27 0a 	sts	0x0A27, r25	; 0x800a27 <__TEXT_REGION_LENGTH__+0x7e0a27>
 122:	85 e8       	ldi	r24, 0x85	; 133
 124:	80 93 00 0a 	sts	0x0A00, r24	; 0x800a00 <__TEXT_REGION_LENGTH__+0x7e0a00>
 128:	81 e0       	ldi	r24, 0x01	; 1
 12a:	80 93 0e 0a 	sts	0x0A0E, r24	; 0x800a0e <__TEXT_REGION_LENGTH__+0x7e0a0e>
 12e:	80 93 0a 0a 	sts	0x0A0A, r24	; 0x800a0a <__TEXT_REGION_LENGTH__+0x7e0a0a>
 132:	08 95       	ret

00000134 <timer_start>:
 134:	e0 e0       	ldi	r30, 0x00	; 0
 136:	fa e0       	ldi	r31, 0x0A	; 10
 138:	80 81       	ld	r24, Z
 13a:	81 60       	ori	r24, 0x01	; 1
 13c:	80 83       	st	Z, r24
 13e:	08 95       	ret

00000140 <timer_stop>:
 140:	f8 94       	cli
 142:	e0 e0       	ldi	r30, 0x00	; 0
 144:	fa e0       	ldi	r31, 0x0A	; 10
 146:	80 81       	ld	r24, Z
 148:	8e 7f       	andi	r24, 0xFE	; 254
 14a:	80 83       	st	Z, r24
 14c:	10 92 20 0a 	sts	0x0A20, r1	; 0x800a20 <__TEXT_REGION_LENGTH__+0x7e0a20>
 150:	10 92 21 0a 	sts	0x0A21, r1	; 0x800a21 <__TEXT_REGION_LENGTH__+0x7e0a21>
 154:	78 94       	sei
 156:	08 95       	ret

00000158 <main>:

int main(void)
{
	ccp_write_io((void *) & (CLKCTRL.OSCHFCTRLA), (0b10001101)); //HF Clock Runstandby, 4 MHz CLK_Main, Autotune
 158:	6d e8       	ldi	r22, 0x8D	; 141
 15a:	88 e6       	ldi	r24, 0x68	; 104
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <ccp_write_io>
	setup_io();
 162:	0e 94 60 00 	call	0xc0	; 0xc0 <setup_io>
	setup_vref();
 166:	0e 94 6c 00 	call	0xd8	; 0xd8 <setup_vref>
	setup_adc();
 16a:	0e 94 70 00 	call	0xe0	; 0xe0 <setup_adc>
	setup_timer();
 16e:	0e 94 8b 00 	call	0x116	; 0x116 <setup_timer>
	
	while(1)
	{
		timer_start();
 172:	0e 94 9a 00 	call	0x134	; 0x134 <timer_start>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 176:	2f e7       	ldi	r18, 0x7F	; 127
 178:	8a e1       	ldi	r24, 0x1A	; 26
 17a:	96 e0       	ldi	r25, 0x06	; 6
 17c:	21 50       	subi	r18, 0x01	; 1
 17e:	80 40       	sbci	r24, 0x00	; 0
 180:	90 40       	sbci	r25, 0x00	; 0
 182:	e1 f7       	brne	.-8      	; 0x17c <main+0x24>
 184:	00 c0       	rjmp	.+0      	; 0x186 <main+0x2e>
 186:	00 00       	nop
		_delay_ms(500);
		timer_stop();
 188:	0e 94 a0 00 	call	0x140	; 0x140 <timer_stop>
 18c:	2f e7       	ldi	r18, 0x7F	; 127
 18e:	8a e1       	ldi	r24, 0x1A	; 26
 190:	96 e0       	ldi	r25, 0x06	; 6
 192:	21 50       	subi	r18, 0x01	; 1
 194:	80 40       	sbci	r24, 0x00	; 0
 196:	90 40       	sbci	r25, 0x00	; 0
 198:	e1 f7       	brne	.-8      	; 0x192 <main+0x3a>
 19a:	00 c0       	rjmp	.+0      	; 0x19c <main+0x44>
 19c:	00 00       	nop
 19e:	e9 cf       	rjmp	.-46     	; 0x172 <main+0x1a>

000001a0 <ccp_write_io>:
 1a0:	dc 01       	movw	r26, r24
 1a2:	28 ed       	ldi	r18, 0xD8	; 216
 1a4:	20 93 34 00 	sts	0x0034, r18	; 0x800034 <__TEXT_REGION_LENGTH__+0x7e0034>
 1a8:	6c 93       	st	X, r22
 1aa:	08 95       	ret

000001ac <_exit>:
 1ac:	f8 94       	cli

000001ae <__stop_program>:
 1ae:	ff cf       	rjmp	.-2      	; 0x1ae <__stop_program>
